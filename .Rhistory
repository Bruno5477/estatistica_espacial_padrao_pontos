stat_function(fun = dbeta,
args = list(shape1 = 8,
shape2= 2),
colour = "red") +
labs(y = "Densidade")
#base pnad
renda = dadosPNADc |>
select("VD4019")
renda<- na.omit(renda)
renda |>
ggplot(aes(x = VD4019)) +
geom_histogram(aes(y = ..density..),
binwidth = 0.3)
View(renda)
View(renda)
# Estimando mediana e quantis da renda mensal habitual
medianarenda <- svyquantile(x=~VD4019, design=dadosPNADc, quantiles=c(0.25, 0.5, 0.75, 0.9, 0.95, 0.98), na.rm=TRUE)
# Aplicando a incorporacao do desenho amostral nos microdados
dadosPNADc <- pnadc_design(data_pnadc=dadosPNADc)
library("PNADcIBGE")
# Aplicando a incorporacao do desenho amostral nos microdados
dadosPNADc <- pnadc_design(data_pnadc=dadosPNADc)
# Estimando mediana e quantis da renda mensal habitual
medianarenda <- svyquantile(x=~VD4019, design=dadosPNADc, quantiles=c(0.25, 0.5, 0.75, 0.9, 0.95, 0.98), na.rm=TRUE)
medianarenda
#base pnad
save(dadosPNADc, file = "Pnad.Rdata")
library(quantreg)
library(tidyverse)
setwd("~/Etatistica/TCC/aplicação")
#modelo Pnad
Pnad <- read_csv(file = "PNAD2020.CSV")
#modelo Pnad
Pnad <- read_csv2(file = "PNAD2020.CSV")
#modelo Pnad
Pnad <- read.csv2(file = "PNAD2020.CSV")
View(Pnad)
#modelo Pnad
Pnad <- read.csv(file = "PNAD2020.CSV")
#modelo Pnad
Pnad <- read.csv2(file = "PNAD2020.CSV")
#modelo Pnad
Pnad <- read_csv2(file = "PNAD2020.CSV")
#modelo Pnad
Pnad <- read_csv(file = "PNAD2020.CSV")
#modelo Pnad
Pnad <- read.csv2(file = "PNAD2020.CSV")
#modelo playstore
dados = read_csv2(file = "googleplaystore.csv")
dados$Rating = as.numeric(dados$Rating)
#modelos básicos
modelo.lm1 = lm(Rendimento.mensal~.,data = Pnad)
modelo_quant <- rq(Rendimento.mensal~., data = Pnad)
modelo_quant
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5)
modelo_quant1
summary(modelo.lm1)
summary(modelo_quant1)
summary(modelo_quant)
Pnad <- Pnad |>
select(-UF)
#modelos básicos
modelo.lm1 = lm(Rendimento.mensal~.,data = Pnad)
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5)
summary(modelo.lm1)
summary(modelo_quant)
#modelo playstore
dados = read_csv2(file = "googleplaystore.csv")
dados$Rating = as.numeric(dados$Rating)
summary(modelo.lm1)
#modelos básicos
modelo.lm1 = lm(Rendimento.mensal~.,data = Pnad)
summary(modelo.lm1)
#modelo Pnad
Pnad <- read.csv2(file = "PNAD2020.CSV")
#modelos básicos
modelo.lm1 = lm(Rendimento.mensal~.,data = Pnad)
summary(modelo.lm1)
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5)
#modelos básicos
modelo.lm2 = lm(Raiting~.,data = dados)
#modelos básicos
modelo.lm2 = lm(Rating~.,data = dados)
View(dados)
#modelos básicos
modelo.lm2 = lm(Rating~ Category + Reviews + Type + Price,data = dados)
summary(modelo.lm2)
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5, method = )
summary(modelo_quant1)
summary.rq(modelo_quant1)
modelo_quant2 <- rq(Rating~ Category + Reviews + Type + Price,data = dados,
tau = 0.5 )
summary(modelo_quant2)
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5, method = "fn")
summary.rq(modelo_quant1)
summary(modelo_quant1)
modelo_quant2 <- rq(Rating~ Category + Reviews + Type + Price,data = dados,
tau = 0.5 )
summary(modelo_quant2)
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5, method = "pfn")
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5, method = "fn")
summary(modelo_quant1)
modelo_quant1
modelo_quant2 <- rq(Rating~ Category + Reviews + Type + Price,data = dados,
tau = 0.5 )
modelo_quant2 <- rq(Rating~ Category + Reviews + Type + Price,data = dados,
tau = 0.5,method = "fn")
modelo_quant2
summary(modelo.lm2)
View(modelo_quant1)
View(modelo_quant2)
View(modelo.lm2)
modelo_quant2[["coefficients"]][["(Intercept)"]]
modelo.lm2[["coefficients"]]
modelo_quant2[["coefficients"]]
library(quantreg)
library(tidyverse)
#modelo Pnad
Pnad <- read.csv2(file = "PNAD2020.CSV")
#modelo playstore
dados = read_csv2(file = "googleplaystore.csv")
View(dados)
View(Pnad)
summary(Pnad$UF)
summary(Pnad)
#modelos básicos
modelo.lm1 = lm(Rendimento.mensal~.,data = Pnad)
summary(modelo.lm1)
#modelos básicos
modelo.lm2 = lm(Rating~ Category + Reviews + Type + Price,data = dados)
summary(modelo.lm2)
dados$Rating = as.numeric(dados$Rating)
#modelos básicos
modelo.lm2 = lm(Rating~ Category + Reviews + Type + Price,data = dados)
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5, method = "fn")
summary(modelo_quant1)
modelo_quant1
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5, method = "br")
modelo_quant1
View(modelo_quant1)
modelo_quant1 <- rq(Rendimento.mensal~., data = Pnad,
tau = 0.5, method = "fn")
modelo_quant1
modelo_quant2 <- rq(Rating~ Category + Reviews + Type + Price,data = dados,
tau = 0.5,method = "fn")
summary(modelo_quant2)
modelo_quant2
#modelos básicos
modelo.lm2 = lm(Rating~ Category + Reviews + Type + Price,data = dados)
summary(modelo.lm2)
summary(modelo_quant2)
summary.crq(modelo_quant2)
summary.rq(modelo_quant2)
setwd("~/Etatistica/2021.2/ESTATÍSTICA ESPACIAL I/Desafio 2/bases")
setwd("~/Etatistica/2021.2/ESTATÍSTICA ESPACIAL I/Desafio 2/bases")
library(raster)
library(geoR)
library(readxl)
library(rgdal)
# Lendo a base de dados
base <- read_excel("Temp_MG.xlsx")
setwd("~/Etatistica/2021.2/ESTATÍSTICA ESPACIAL I/Desafio 2/bases")
setwd("~/Etatistica/2021.2/ESTATÍSTICA ESPACIAL I/Desafio 2")
setwd("~/Etatistica/2021.2/ESTATÍSTICA ESPACIAL I/Desafio 2")
# Lendo a base de dados
base <- read_excel("Temp_MG.xlsx")
dim(base)
names(base)
mapaMG <- readOGR("shape_minas/Mg_region.shp",layer="Mg_region")
# Mapa com pontos
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=2,pch=21,bg=5)
axis(1)
axis(2)
# Transformando em geodata (para usar as funcoes do pacote geoR)
dados <- as.geodata(base, coords.col = 4:3, data.col = 2)
plot(dados)
par(mfrow=c(1,1))
points(dados,cex.min=1, cex.max=5, pt.sizes="quintiles",
col=terrain.colors(5))
View(base)
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(15.42,0.0001159668), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE, nugget=5)
summary(mv)
#Obtenção do variograma
variograma <- variog(dados)
plot(variograma)
lines(mv,lty=1,lwd=2,col="blue")
library(gstat)
library(sp)
base.idw <- as.data.frame(cbind(dados$coords,dados$data))
coordinates(base.idw) <- c("long", "lat")
summary(dados$coords)
long.pred = seq(-50.63,-40.25,l=65)
lat.pred = seq(-23.04,-14.41,l=65)
grid.pred <- expand.grid(long.pred,lat.pred)
# krigagem
krigagem <- krige.conv(dados, loc=grid.pred,
krige=krige.control(type.krige="SK",
trend.d = trend.spatial(~coords, dados),
trend.l = trend.spatial(~Var1+Var2, grid.pred),
beta=mv$beta,
nugget=mv$nugget,
cov.pars=mv$cov.pars))
hist(krigagem$predict)
# media
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred,
col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
#Obtenção do variograma
variograma <- variog(dados, estimator.type = "modulus")
plot(variograma)
# Variograma empirico
v <- geoR::variog(dados,trend= ~ dados$coords)
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5),cex=1.5)
plot(v,pch=16,col=4,xlab="distância",ylab="semivariograma",ylim=c(0,1))
plot(v,pch=16,col=4,xlab="distância",ylab="semivariograma",ylim=c(0,1))
# Variograma empirico
v <- geoR::variog(dados,trend= ~ dados$coords, estimator.type = "modulus")
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5),cex=1.5)
plot(v,pch=16,col=4,xlab="distância",ylab="semivariograma",ylim=c(0,1))
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(0.1,0.1), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE,nugget=0.3)
plot(v,pch=16,col=4,xlab="distância",ylab="semivariograma",ylim=c(0,1))
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(0.1,0.1), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE,nugget=0.3)
summary(mv)
plot(v,col=4,xlab="distância",ylab="semivariograma",ylim=c(0,0.6))
lines(mv,lty=1,col="blue")
plot(variograma)
#Obtenção do variograma
variograma <- variog(dados)
plot(variograma)
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(15.42,0.0001159668), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE, nugget=5)
summary(mv)
plot(variograma)
lines(mv,lty=1,lwd=2,col="blue")
plot(variograma,, estimator.type = "modulus")
lines(mv,lty=1,lwd=2,col="blue")
plot(variograma,, estimator.type = "modulus")
lines(mv,lty=1,lwd=2,col="blue")
summary(mv)
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(2.18,0.0002332784), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE, nugget=5)
summary(mv)
plot(variograma,, estimator.type = "modulus")
plot(variograma,estimator.type = "modulus")
lines(mv,lty=1,lwd=2,col="blue")
plot(variograma,estimator.type = "modulus")
lines(mv,lty=1,lwd=2,col="blue")
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(10,0.0002332784), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE, nugget=5)
summary(mv)
plot(variograma,estimator.type = "modulus")
lines(mv,lty=1,lwd=2,col="blue")
plot(variograma)
#Obtenção do variograma
variograma <- variog(dados)
plot(variograma)
plot(variograma)
plot(variograma,estimator.type = "modulus")
plot(variograma,estimator.type = "modulus")
#Obtenção do variograma
variograma <- variog(dados,,estimator.type = "modulus")
plot(variograma)
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(10,0.0002332784), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE, nugget=5)
summary(mv)
plot(variograma)
lines(mv,lty=1,lwd=2,col="blue")
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(2.18,0.0004082425), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE, nugget=5)
summary(mv)
plot(variograma)
lines(mv,lty=1,lwd=2,col="blue")
#Obtenção do variograma
variograma <- variog(dados,,estimator.type = "modulus")
plot(variograma)
# Variograma empirico
v <- geoR::variog(dados,trend= ~ dados$coords, estimator.type = "modulus")
plot(v,pch=16,col=4,xlab="distância",ylab="semivariograma",ylim=c(0,1))
View(v)
# Variograma empirico
v <- geoR::variog(dados, estimator.type = "modulus")
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5),cex=1.5)
plot(v,pch=16,col=4,xlab="distância",ylab="semivariograma",ylim=c(0,1))
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(2.18,0.0004082425), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE, nugget=5)
summary(mv)
plot(variograma)
lines(mv,lty=1,lwd=2,col="blue")
long.pred = seq(-50.63,-40.25,l=65)
lat.pred = seq(-23.04,-14.41,l=65)
grid.pred <- expand.grid(long.pred,lat.pred)
# krigagem
krigagem <- krige.conv(dados, loc=grid.pred,
krige=krige.control(type.krige="SK",
trend.d = trend.spatial(~coords, dados),
trend.l = trend.spatial(~Var1+Var2, grid.pred),
beta=mv$beta,
nugget=mv$nugget,
cov.pars=mv$cov.pars))
hist(krigagem$predict)
# media
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred,
col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
plot(mapaMG,xlab="longitude",ylab="latitude")
image(krigagem, loc=grid.pred,
col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
# variancia
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred, coords=dados$coords,
values=krigagem$krige.var, col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
#Obtenção do variograma
variograma <- variog(dados,,estimator.type = "modulus")
plot(variograma)
#Obtenção do variograma
variograma <- variog(dados,estimator.type = "modulus")
plot(variograma)
#Obtenção do variograma
variograma <- variog(dados)
plot(variograma)
#Obtenção do variograma
variograma <- variog(dados,,estimator.type = "modulus")
plot(variograma)
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(2.18,0.0004082425), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE, nugget=5)
summary(mv)
plot(variograma)
lines(mv,lty=1,lwd=2,col="blue")
#Estimando o efeito pepita:
mv <- likfit(dados, ini=c(2.18,0.000731721), trend = trend.spatial(~coords, dados), cov.model="gaussian",
fix.nugget = TRUE, nugget=5)
summary(mv)
plot(variograma)
lines(mv,lty=1,lwd=2,col="blue")
# krigagem
krigagem <- krige.conv(dados, loc=grid.pred,
krige=krige.control(type.krige="SK",
trend.d = trend.spatial(~coords, dados),
trend.l = trend.spatial(~Var1+Var2, grid.pred),
beta=mv$beta,
nugget=mv$nugget,
cov.pars=mv$cov.pars))
krigagem
# media
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred,
col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
# variancia
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred, coords=dados$coords,
values=krigagem$krige.var, col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
plot(mapaMG,xlab="longitude",ylab="latitude")
# variancia
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred, coords=dados$coords,
values=krigagem$krige.var, col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
base.idw <- as.data.frame(cbind(dados$coords,dados$data))
coordinates(base.idw) <- c("long", "lat")
summary(dados$coords)
long = seq(-43.8,-43.1,l=50)
lat = seq(-23.1,-22.79,l=50)
nx = length(long)
ny = length(lat)
# criando o grid de pontos para interpolar
grid = as.data.frame(expand.grid(long,lat))
# coordenadas dos pontos do grid
coordinates(grid) = ~Var1+Var2
# interpolacao
interpol <- idw(V3~1, base.idw, newdata = grid, idp = 2)
# interpolacao
interpol <- idw(V3~1, base.idw, newdata = grid, idp = 2)
interpol.matriz = matrix(interpol$var1.pred,nx,ny)
# grafico
#opcao 1
filled.contour(long, lat,interpol.matriz,
key.title = title(main = "log premio", cex.main = 1),
plot.axes={axis(1)
axis(2)
plot(mapaRJ,xlab="longitude",ylab="latitude",add=TRUE)
})
# grafico
#opcao 1
filled.contour(long, lat,interpol.matriz,
key.title = title(main = "log premio", cex.main = 1),
plot.axes={axis(1)
axis(2)
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
})
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaRJ,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=2,pch=21,bg=5)
axis(1)
axis(2)
# Mapa com pontos
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaRJ,xlab="longitude",ylab="latitude")
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=2,pch=21,bg=5)
axis(1)
axis(2)
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred,
col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
points(base$long,base$lat,col=2,pch=21,bg=5)
points(base$long,base$lat,col=1,pch=21,bg=5)
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=1,pch=21,bg=5)
axis(1)
axis(2)
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=1,pch=21,bg=5)
axis(1)
axis(2)
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=5,pch=21,bg=5)
axis(1)
axis(2)
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=5,pch=21,bg=5)
axis(1)
axis(2)
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=5,pch=21,bg=5)
axis(1)
axis(2)
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=1,pch=21,bg=5)
axis(1)
axis(2)
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=1,pch=21,bg=4)
axis(1)
axis(2)
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=1,pch=21,bg=2)
axis(1)
axis(2)
par(mar=c(4,4,0,0),cex=1.4)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=1,pch=21,bg=1)
axis(1)
axis(2)
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred,
col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
points(base$long,base$lat,col=1,pch=21,bg=1)
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred,
values=krigagem$krige.var, col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
mapaMG <- readOGR("shape_minas/Mg_region.shp",layer="Mg_region")
points(base$long,base$lat,col=1,pch=21,bg=1)
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred,
col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
points(base$long,base$lat,col=1,pch=21,bg=1)
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred,
values=krigagem$krige.var, col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
plot(mapaMG,xlab="longitude",ylab="latitude")
points(base$long,base$lat,col=1,pch=21,bg=1)
par(mfrow=c(1,1),mar=c(4,4,0.5,0.5))
image(krigagem, loc=grid.pred,
values=krigagem$krige.var, col=terrain.colors(256))
plot(mapaMG,xlab="longitude",ylab="latitude",add=TRUE)
points(base$long,base$lat,col=1,pch=21,bg=1)
